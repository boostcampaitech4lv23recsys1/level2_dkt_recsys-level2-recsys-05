Start Training: Epoch 1
> /opt/ml/input/code/dkt/src/trainer.py(87)train()
-> input = list(map(lambda t: t.to(args.device), process_batch(batch)))
*** AttributeError: 'tuple' object has no attribute 'shape'
5
64
64
64
64
64
5
(tensor([[   0.,    0.,  941.,  ..., 1455., 1455., 1455.],
        [ 536.,  538.,  538.,  ..., 1313., 1313., 1313.],
        [ 494.,  494.,  494.,  ...,  517.,  517.,  517.],
        ...,
        [ 753.,  753.,  753.,  ...,  761.,  761.,  761.],
        [  70.,   70.,   70.,  ...,  134.,  134.,  134.],
        [ 100.,  100.,  100.,  ...,  125.,  125.,  125.]]), tensor([[   0.,    0., 5140.,  ..., 8878., 8879., 8880.],
        [2797., 2803., 2804.,  ..., 7802., 7803., 7804.],
        [2575., 2576., 2577.,  ..., 2699., 2700., 2701.],
        ...,
        [3933., 3934., 3935.,  ..., 3975., 3976., 3977.],
        [ 355.,  356.,  357.,  ...,  688.,  689.,  690.],
        [ 511.,  512.,  513.,  ...,  643.,  644.,  645.]]), tensor([[  0.,   0., 381.,  ..., 767., 767., 767.],
        [152., 153., 153.,  ..., 844., 300., 692.],
        [498., 498., 498.,  ..., 686., 686., 686.],
        ...,
        [227., 227., 227.,  ..., 232., 232., 232.],
        [565., 565., 565.,  ..., 588., 588., 588.],
        [571., 571., 571.,  ..., 668., 668., 668.]]), tensor([[0., 0., 1.,  ..., 1., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 0.]]), tensor([[0., 0., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]]))
60
*** TypeError: len() of a 0-d tensor
60
60
60
60
*** IndexError: tuple index out of range
train_loader = <torch.utils.data.dataloader.DataLoader object at 0x7f7f8e3ae100>
model = Bert(
  (embedding_interaction): Embedding(3, 16)
  (embedding_test): Embedding(1539, 16)
  (embedding_question): Embedding(9456, 16)
  (embedding_tag): Embedding(914, 16)
  (comb_proj): Linear(in_features=64, out_features=50, bias=True)
  (encoder): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(3, 50, padding_idx=0)
      (position_embeddings): Embedding(60, 50)
      (token_type_embeddings): Embedding(2, 50)
      (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=50, out_features=50, bias=True)
      (activation): Tanh()
    )
  )
  (fc): Linear(in_features=50, out_features=1, bias=True)
  (activation): Sigmoid()
)
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: False
    lr: 0.005
    maximize: False
    weight_decay: 0.01
)
scheduler = <torch.optim.lr_scheduler.ReduceLROnPlateau object at 0x7f7fd9a890d0>
args = Namespace(asset_dir='asset/', batch_size=64, clip_grad=10, data_dir='/opt/ml/input/data/', device='cuda', drop_out=0.5, file_name='train_data.csv', hidden_dim=50, log_steps=50, lr=0.005, max_seq_len=60, model='bert', model_dir='models/', model_name='model.pt', n_epochs=100, n_heads=2, n_layers=5, n_questions=9455, n_tag=913, n_test=1538, num_workers=1, optimizer='adam', output_dir='output/', patience=10, scheduler='plateau', seed=42, test_file_name='test_data.csv', total_steps=7400, warmup_steps=740)
train_loader = <torch.utils.data.dataloader.DataLoader object at 0x7f7f8e3ae100>
model = Bert(
  (embedding_interaction): Embedding(3, 16)
  (embedding_test): Embedding(1539, 16)
  (embedding_question): Embedding(9456, 16)
  (embedding_tag): Embedding(914, 16)
  (comb_proj): Linear(in_features=64, out_features=50, bias=True)
  (encoder): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(3, 50, padding_idx=0)
      (position_embeddings): Embedding(60, 50)
      (token_type_embeddings): Embedding(2, 50)
      (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=50, out_features=50, bias=True)
      (activation): Tanh()
    )
  )
  (fc): Linear(in_features=50, out_features=1, bias=True)
  (activation): Sigmoid()
)
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: False
    lr: 0.005
    maximize: False
    weight_decay: 0.01
)
scheduler = <torch.optim.lr_scheduler.ReduceLROnPlateau object at 0x7f7fd9a890d0>
args = Namespace(asset_dir='asset/', batch_size=64, clip_grad=10, data_dir='/opt/ml/input/data/', device='cuda', drop_out=0.5, file_name='train_data.csv', hidden_dim=50, log_steps=50, lr=0.005, max_seq_len=60, model='bert', model_dir='models/', model_name='model.pt', n_epochs=100, n_heads=2, n_layers=5, n_questions=9455, n_tag=913, n_test=1538, num_workers=1, optimizer='adam', output_dir='output/', patience=10, scheduler='plateau', seed=42, test_file_name='test_data.csv', total_steps=7400, warmup_steps=740)
 82  	    total_preds = []
 83  	    total_targets = []
 84  	    losses = []
 85  	    for step, batch in enumerate(train_loader):
 86  	        import pdb; pdb.set_trace();
 87  ->	        input = list(map(lambda t: t.to(args.device), process_batch(batch)))
 88  	        preds = model(input)
 89  	        targets = input[3]  # correct
 90  	
 91  	        loss = compute_loss(preds, targets)
 92  	        update_params(loss, model, optimizer, scheduler, args)
train_loader = <torch.utils.data.dataloader.DataLoader object at 0x7f7f8e3ae100>
model = Bert(
  (embedding_interaction): Embedding(3, 16)
  (embedding_test): Embedding(1539, 16)
  (embedding_question): Embedding(9456, 16)
  (embedding_tag): Embedding(914, 16)
  (comb_proj): Linear(in_features=64, out_features=50, bias=True)
  (encoder): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(3, 50, padding_idx=0)
      (position_embeddings): Embedding(60, 50)
      (token_type_embeddings): Embedding(2, 50)
      (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=50, out_features=50, bias=True)
              (key): Linear(in_features=50, out_features=50, bias=True)
              (value): Linear(in_features=50, out_features=50, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=50, out_features=50, bias=True)
              (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=50, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=50, bias=True)
            (LayerNorm): LayerNorm((50,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=50, out_features=50, bias=True)
      (activation): Tanh()
    )
  )
  (fc): Linear(in_features=50, out_features=1, bias=True)
  (activation): Sigmoid()
)
optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: False
    lr: 0.005
    maximize: False
    weight_decay: 0.01
)
scheduler = <torch.optim.lr_scheduler.ReduceLROnPlateau object at 0x7f7fd9a890d0>
args = Namespace(asset_dir='asset/', batch_size=64, clip_grad=10, data_dir='/opt/ml/input/data/', device='cuda', drop_out=0.5, file_name='train_data.csv', hidden_dim=50, log_steps=50, lr=0.005, max_seq_len=60, model='bert', model_dir='models/', model_name='model.pt', n_epochs=100, n_heads=2, n_layers=5, n_questions=9455, n_tag=913, n_test=1538, num_workers=1, optimizer='adam', output_dir='output/', patience=10, scheduler='plateau', seed=42, test_file_name='test_data.csv', total_steps=7400, warmup_steps=740)
> /opt/ml/input/code/dkt/src/trainer.py(88)train()
-> preds = model(input)
*** AttributeError: 'list' object has no attribute 'shape'
6
*** NameError: name 'train_data' is not defined
 83  	    total_targets = []
 84  	    losses = []
 85  	    for step, batch in enumerate(train_loader):
 86  	        import pdb; pdb.set_trace();
 87  	        input = list(map(lambda t: t.to(args.device), process_batch(batch)))
 88  ->	        preds = model(input)
 89  	        targets = input[3]  # correct
 90  	
 91  	        loss = compute_loss(preds, targets)
 92  	        update_params(loss, model, optimizer, scheduler, args)
 93  	
6
64
60
Traceback (most recent call last):
  File "train.py", line 31, in <module>
    main(args)
  File "train.py", line 25, in main
    trainer.run(args, train_data, valid_data, model)
  File "/opt/ml/input/code/dkt/src/trainer.py", line 35, in run
    train_auc, train_acc, train_loss = train(
  File "/opt/ml/input/code/dkt/src/trainer.py", line 88, in train
    preds = model(input)
  File "/opt/ml/input/code/dkt/src/trainer.py", line 88, in train
    preds = model(input)
  File "/opt/conda/envs/dkt/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/opt/conda/envs/dkt/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit