
Start Training: Epoch 1






































































































 54%|█████▍    | 12567/23253 [03:26<02:56, 60.72it/s]
Traceback (most recent call last):
  File "train.py", line 31, in <module>
    main(args)
  File "train.py", line 25, in main
    trainer.run(args, train_data, valid_data, model)
  File "/opt/ml/input/code/dkt_v2/src/trainer.py", line 35, in run
    train_auc, train_acc, train_loss = train(
  File "/opt/ml/input/code/dkt_v2/src/trainer.py", line 85, in train
    for step, batch in tqdm(enumerate(train_loader), total=len(train_loader)):
  File "/opt/conda/envs/dkt/lib/python3.8/site-packages/tqdm/std.py", line 1195, in __iter__
    for obj in iterable:
  File "/opt/conda/envs/dkt/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/opt/conda/envs/dkt/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1316, in _next_data
    idx, data = self._get_data()
  File "/opt/conda/envs/dkt/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1282, in _get_data
    success, data = self._try_get_data()
  File "/opt/conda/envs/dkt/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1120, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/opt/conda/envs/dkt/lib/python3.8/multiprocessing/queues.py", line 116, in get
    return _ForkingPickler.loads(res)
  File "/opt/conda/envs/dkt/lib/python3.8/site-packages/torch/multiprocessing/reductions.py", line 305, in rebuild_storage_fd
    fd = df.detach()
  File "/opt/conda/envs/dkt/lib/python3.8/multiprocessing/resource_sharer.py", line 58, in detach
    return reduction.recv_handle(conn)
  File "/opt/conda/envs/dkt/lib/python3.8/multiprocessing/connection.py", line 263, in __exit__
    self.close()
  File "/opt/conda/envs/dkt/lib/python3.8/multiprocessing/connection.py", line 177, in close
    self._close()
  File "/opt/conda/envs/dkt/lib/python3.8/multiprocessing/connection.py", line 361, in _close
    _close(self._handle)
KeyboardInterrupt